@using toDo.Models
@model toDo.ViewModels.RegisterViewModel

<h1>@ViewData["Title"]</h1>

@if (!ViewData.ModelState.IsValid)
{
    <div class="validation-summary-errors">
        <ul>
            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
            {
                <li>@error.ErrorMessage</li>
            }
        </ul>
    </div>
}

<form asp-action="Register" method="post">
    <div class="mb-3">
        <label asp-for="Email"></label>
        <input asp-for="Email" class="form-control" />
        <span asp-validation-for="Email" class="text-danger"></span>
    </div>
    <div class="mb-3">
        <label asp-for="Password"></label>
        <input asp-for="Password" class="form-control" type="password" />
        <span asp-validation-for="Password" class="text-danger"></span>
    </div>
    <div class="mb-3">
        <label asp-for="ConfirmPassword">Confirm Password</label>
        <input asp-for="ConfirmPassword" class="form-control" type="password" />
        <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
    </div>
    <button type="submit" class="btn btn-primary">Send</button>
    <a asp-controller="Todo" asp-action="Login" class="btn btn-secondary">Already registered? Go to login</a>
</form>